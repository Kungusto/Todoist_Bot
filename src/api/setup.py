from src.api.handlers import CommandHandler
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

current_state = 0

'''
1 - —ç—Ç–æ —Å—Ç–∞—Ä—Ç –∏ –ø–æ–º–æ—â—å
2 - —ç—Ç–æ –≤—Å–µ –∑–∞–¥–∞—á–∏
3 - –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞
'''


nav_buttons = [
    ["üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"],  # –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ
    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É", "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"],  # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
]

nav_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text=btn) for btn in row] for row in nav_buttons],
    resize_keyboard=True  # –ü–æ–¥–≥–æ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –ø–æ–¥ —ç–∫—Ä–∞–Ω
)

commands = [
    func[:-8] for func in dir(CommandHandler)  
    if callable(getattr(CommandHandler, func)) and func.endswith("_command")
]
#–∑–∞–¥–∞—á–∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞
"""
0 - title (–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏)
1 - subtasks (–ü–æ–¥–∑–∞–¥–∞—á–∏, —Å–ø–∏—Å–æ–∫)
2 - priority (–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –≥–¥–µ 1 - –Ω–∏–∑–∫–∏–π, 2 - —Å—Ä–µ–¥–Ω–∏–π, 3 - –≤—ã—Å–æ–∫–∏–π)
3 - status (–°—Ç–∞—Ç—É—Å, –≥–¥–µ 1 - –Ω–æ–≤–∞—è, 2 - –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, 3 - –æ—Ç–ª–æ–∂–µ–Ω–æ, 4 - –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
4 - deadline (–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD)
"""
task_buttons = [
    # ["–ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã", [], 1, 1, "2030-02-20-00-00-00"],
    # ["–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞", [], 2, 2, "2020-12-01-00-00-00"],
    # ["–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç—á—ë—Ç", ["–ù–∞–ø–∏—Å–∞—Ç—å –≤–≤–æ–¥", "–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á—ë—Ç—ã"], 3, 1, "2025-03-25-00-00-00"],
    # ["–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã", ["–ú–æ–ª–æ–∫–æ", "–•–ª–µ–±", "–Ø–π—Ü–∞"], 2, 1, "2025-03-18-00-00-00"],
    # ["–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É", [], 3, 3, "2025-04-10-00-00-00"],
    # ["–ü–æ–∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ", [], 1, 1, "2025-03-15-00-00-00"],
    # ["–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É", ["–ü—Ä–æ—á–∏—Ç–∞—Ç—å –≥–ª–∞–≤—ã 1-3", "–†–µ—à–∏—Ç—å —Ç–µ—Å—Ç—ã"], 3, 1, "2025-05-10-00-00-00"],
    # ["–û–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç–∞", [], 2, 1, "2025-03-28-00-00-00"],
    # ["–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É", [], 1, 3, "2025-06-01-00-00-00"],
    # ["–°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É", [], 2, 1, "2025-05-14-00-00-00"],
]

task_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=task[0], callback_data=f"task:{index}")]
        for index, task in enumerate(task_buttons)
    ]
)

task_edit_buttons = [
    ["‚û° –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å üîÑ", "edit_task:0"],
    ["‚û° –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á—É ‚ûï", "add_subtasks:0"],
    ["‚û° –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç üî•", "change_priority:0"],
    ["‚û° –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å ‚úÖ", "change_status:0"],
    ["‚û° –ò–∑–º–µ–Ω–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω ‚è≥", "change_deadline:0"],
]

task_edit_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1] if len(btn) > 1 else btn[0])]
        for btn in task_edit_buttons
    ]
)

task_priority_edit_buttons = [
    ["1Ô∏è‚É£ –í—ã—Å–æ–∫–∏–π (üî• –°—Ä–æ—á–Ω–æ)", "High", "üî• –°—Ä–æ—á–Ω–æ", 1],
    ["2Ô∏è‚É£ –°—Ä–µ–¥–Ω–∏–π (‚è≥ –û–±—ã—á–Ω—ã–π)", "Medium", "‚è≥ –û–±—ã—á–Ω—ã–π", 2],
    ["3Ô∏è‚É£ –ù–∏–∑–∫–∏–π (‚úÖ –ú–æ–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å)", "Low", "‚úÖ –ú–æ–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å", 3],
]

task_priority_edit_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1] if len(btn) > 1 else btn[0])]
        for btn in task_priority_edit_buttons
    ]
)

task_status_edit_buttons = [
    ["–ù–æ–≤–∞—è üìÉ", "New", 1],
    ["–í –ø—Ä–æ—Ü–µ—Å—Å–µ ‚è≥", "In_Progress", 2],
    ["–û—Ç–ª–æ–∂–µ–Ω–∞ üîÑ", "On_Hold", 3],
    ["–ó–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ", "Completed", 4],
]

task_status_edit_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1] if len(btn) > 1 else btn[0])]
        for btn in task_status_edit_buttons
    ]
)

auth_button = [
    ["–í—Ö–æ–¥", "enter"],
    ["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "register"],
]

auth_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1] if len(btn) > 1 else btn[0])]
        for btn in auth_button
    ]
)


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ü—Ä–æ—á–µ–µ"
misc_buttons = [
    ["üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "misc_notifications"],
    ["üî¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á", "misc_task_sorting"],
    ["‚úÖ –ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å", "misc_task_filter"],
    ["‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "misc_settings"],
    ["üë§ –õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å", "misc_profile"],
]

misc_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_buttons
    ]
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
misc_notifications_buttons = [
    ["üì¢ –ü–æ–∫–∞–∑—ã–≤–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "toggle_notifications"],
    ["üïí –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö", "toggle_reminders"],
    ["‚è≥ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö", "toggle_overdue"],
    ["üöÄ –ò–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (3—á, 6—á, 12—á)", "set_notification_interval"],
]

misc_notifications_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_notifications_buttons
    ]
)
settings = {
    "notifications": False,
    "time_format": 24,
    "auto_delete": 7,
    "ai": True,
    "task_sort": 4,
    "task_filter": 0,
    "language": "Russian"
}


notification_fun = "üîï –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" if settings["notifications"] else "üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–ù–∞—Å—Ç—Ä–æ–µ–∫"
misc_settings_buttons = [
    [notification_fun, "notifications"],
    ["‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (24—á / 12—á)", "set_time_format"],
    ["üóë –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á (7/30 –¥–Ω–µ–π)", "set_auto_delete"],
    ["–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "set_ai"],
    ["üåê –°–º–µ–Ω–∞ —è–∑—ã–∫–∞", "set_language"],
]

misc_settings_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_settings_buttons
    ]
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á
misc_task_filter_buttons = [
    ["üìå –¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ", "filter_active"],
    ["‚ùå –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", "filter_completed"],
    ["üî¥ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ", "filter_overdue"],
    ["‚ö† –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º", "filter_high_priority"],
    ["üìÖ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "filter_today"],
    ["üìù –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ", "filter_all"],
]

misc_task_filter_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_task_filter_buttons
    ]
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∑–∞–¥–∞—á
misc_task_sorting_buttons = [
    ["üîº –ü–æ –¥–∞—Ç–µ (—Ä–∞–Ω—å—à–µ ‚Üí –ø–æ–∑–∂–µ)", "sort_date_asc"],
    ["üîΩ –ü–æ –¥–∞—Ç–µ (–ø–æ–∑–∂–µ ‚Üí —Ä–∞–Ω—å—à–µ)", "sort_date_desc"],
    ["‚ö° –ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–≤—ã—Å–æ–∫–∏–π ‚Üí –Ω–∏–∑–∫–∏–π)", "sort_priority"],
    ["üî† –ü–æ –∞–ª—Ñ–∞–≤–∏—Ç—É", "sort_alphabetically"],
    ["üîÑ –°–±—Ä–æ—Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏", "sort_reset"],
]

misc_task_sorting_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_task_sorting_buttons
    ]
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è "–õ–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"
misc_profile_buttons = [
    ["‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", "edit_name"],
    ["üì¶ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞—á (JSON / TXT)", "export_tasks"],
    ["üîÑ –°–±—Ä–æ—Å –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫", "reset_settings"],
    ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–∞–º", "task_statistics"],
]

misc_profile_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1])]
        for btn in misc_profile_buttons
    ]
)

notifications_button = []

notifications_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=notif[0], callback_data=f"task:{i}")]
        for i, notif in enumerate(notifications_button)
    ]
)

id = -1
user_id = -1
nickname = -1
password = -1
active_codes = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è