import asyncio

from alembic.command import current

from src.api.handlers import CommandHandler
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


token = "8090759361:AAGkfIL43EeWm5NJ7CZt3I8C-ReUZktRH_U"

current_state = 0
'''
1 - —ç—Ç–æ —Å—Ç–∞—Ä—Ç –∏ —Ö–µ–ª–ø
2 - —ç—Ç–æ –≤—Å–µ –∑–∞–¥–∞—á–∏
3 - –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞
'''

nav_buttons = [
    ["üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"],  # –û–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ
    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É", "‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏"],  # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ
]

nav_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text=btn) for btn in row] for row in nav_buttons],
    resize_keyboard=True  # –ü–æ–¥–≥–æ–Ω—è–µ—Ç —Ä–∞–∑–º–µ—Ä –ø–æ–¥ —ç–∫—Ä–∞–Ω
)

commands = [
    func[:-8] for func in dir(CommandHandler)  
    if callable(getattr(CommandHandler, func)) and func.endswith("_command")
]

task_buttons = [
    ["–ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã"],
    ["–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞"],
]

task_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=task[0], callback_data=f"task:{index}")]
            for index, task in enumerate(task_buttons)
        ]
)


task_edit_buttons = [
    ["‚úè –ò–∑–º–µ–Ω–∏—Ç—å", "edit_task:0"],
    ["–î–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", "add_description:0"],
    ["–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∑–∞–¥–∞—á–∏", "add_subtasks:0"],
    ["–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç", "change_priority:0"],
    ["–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", "change_status:0"],
    ["–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "change_deadline:0"],
]

task_edit_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=btn[0], callback_data=btn[1] if len(btn) > 1 else btn[0])]
        for btn in task_edit_buttons
    ]
)

print("task_edit_buttons:", task_edit_buttons)



#subtask_keyboard[task_keyboard.long] –∫–∞–∫-–Ω–∏–±—É–¥—å –ø–æ—Ç–æ–º

